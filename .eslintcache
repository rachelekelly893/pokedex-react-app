[{"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\index.js":"1","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\App.js":"2","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\services\\pokemon.js":"3","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\Card\\Card.js":"4","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\NavBar\\NavBar.js":"5","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\helpers\\pokemonTypes.js":"6","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\GrowMenu\\GrowMenu.js":"7","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\StatChart\\StatChart.js":"8","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\DetailsDialog\\DetailsDialog.js":"9","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\TypeSelect\\TypeSelect.js":"10","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\Loading\\Loading.js":"11","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\Pokemon\\Pokemon.js":"12","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\BasicPagination\\BasicPagination.js":"13","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\AboutDialog\\AboutDialog.js":"14","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\SortBy\\SortBy.js":"15"},{"size":302,"mtime":1616781722857,"results":"16","hashOfConfig":"17"},{"size":5292,"mtime":1617180978203,"results":"18","hashOfConfig":"17"},{"size":517,"mtime":1617179095777,"results":"19","hashOfConfig":"17"},{"size":1746,"mtime":1617181738125,"results":"20","hashOfConfig":"17"},{"size":3021,"mtime":1617181516438,"results":"21","hashOfConfig":"17"},{"size":421,"mtime":1616430616224,"results":"22","hashOfConfig":"17"},{"size":3053,"mtime":1617179329874,"results":"23","hashOfConfig":"17"},{"size":1517,"mtime":1616768375018,"results":"24","hashOfConfig":"17"},{"size":2109,"mtime":1616767859245,"results":"25","hashOfConfig":"17"},{"size":1458,"mtime":1617005819899,"results":"26","hashOfConfig":"17"},{"size":803,"mtime":1616491272921,"results":"27","hashOfConfig":"17"},{"size":652,"mtime":1617178829279,"results":"28","hashOfConfig":"17"},{"size":797,"mtime":1617180908675,"results":"29","hashOfConfig":"17"},{"size":1197,"mtime":1617179466244,"results":"30","hashOfConfig":"17"},{"size":1265,"mtime":1617005984661,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"7des29",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\index.js",[],["65","66"],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\App.js",["67"],"import React, { useState, useEffect } from 'react';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport { getAllPokemon, getPokemon } from './services/pokemon.js';\r\nimport './App.css';\r\nimport Loading from './components/Loading/Loading'\r\nimport Pokemon from './components/Pokemon/Pokemon';\r\nimport BasicPagination from './components/BasicPagination/BasicPagination'\r\n\r\n\r\n// APP\r\nfunction App() {\r\n\r\n\t// RETRIEVE POKEMON DATA FROM API\r\n\tconst [ pokemonData, setPokemonData ] = useState([]);\r\n\tconst [ loading, setLoading ] = useState(true);\r\n\tconst initialUrl = 'https://pokeapi.co/api/v2/pokemon?limit=898';\r\n\t\r\n\r\n\tconst loadingPokemon = async (data) => {\r\n\t\tlet _pokemonData = await Promise.all(\r\n\t\t\tdata.map(async (pokemon) => {\r\n\t\t\t\tlet pokemonRecord = await getPokemon(pokemon.url);\r\n\t\t\t\treturn pokemonRecord;\r\n\t\t\t})\r\n\t\t);\r\n\t\tsetPokemonData(_pokemonData);\r\n\t\tsetFilteredPokemon(_pokemonData);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tlet response = await getAllPokemon(initialUrl);\r\n\t\t\tawait loadingPokemon(response.results);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\t\r\n\t// FILTER POKEMON\r\n\tconst [ nameFilter, setNameFilter ] = useState('');\r\n\tconst [ filteredPokemon, setFilteredPokemon ] = useState([]);\r\n\tconst [ typeFilter, setTypeFilter ] = useState('');\r\n\tconst [ hasName, setHasName ] = useState(false)\r\n\tconst [ hasType, setHasType ] = useState(false)\r\n\tconst [ isSorted, setIsSorted ] = useState(false)\r\n\t\r\n\t// FILTER BY NAME\r\n\tconst handleNameChange = (e) => {\r\n\t\tlet name = e.target.value;\r\n\t\tfilterName(name);\r\n\t\tif (name !== '') {\r\n\t\t\tsetHasName(true)\r\n\t\t}\r\n\t};\r\n\r\n\tconst filterName = (name) => {\r\n\t\tsetNameFilter(name);\r\n\t\tlet nameFiltered = pokemonData.filter((poke) => (poke !== undefined) && poke.name.toLowerCase().includes(name.toLowerCase()));\r\n\t\tlet typeNameFiltered = nameFiltered.filter((poke) => \r\n\t\t\tpoke.types[1] ? \r\n\t\t\tpoke.types[0].type.name.includes(typeFilter) || poke.types[1].type.name.includes(typeFilter) : \r\n\t\t\tpoke.types[0].type.name.includes(typeFilter))\r\n\t\t\t\thasType ? setFilteredPokemon(typeNameFiltered) : setFilteredPokemon(nameFiltered);\r\n\t\t\t\thandlePageChange(null, 1)\r\n\t};\r\n\r\n\t// FILTER BY TYPE\r\n\tconst handleTypeChange = (e) => {\r\n\t\tlet type = e.target.value;\r\n\t\tfilterType(type);\r\n\t\tif (type !== '') {\r\n\t\t\tsetHasType(true)\r\n\t\t}\r\n\t};\r\n\r\n\tconst filterType = (type) => {\r\n\t\tsetTypeFilter(type);\r\n\t\tlet typeFiltered = pokemonData.filter((poke) => (poke !== undefined) && \r\n\t\t\t(poke.types[1] ? \r\n\t\t\tpoke.types[0].type.name.includes(type) || poke.types[1].type.name.includes(type) : \r\n\t\t\tpoke.types[0].type.name.includes(type)))\r\n\t\t\tlet nameTypeFiltered = typeFiltered.filter((poke) => poke.name.toLowerCase().includes(nameFilter.toLowerCase()));\r\n\t\t\thasName ? setFilteredPokemon(nameTypeFiltered) : setFilteredPokemon(typeFiltered);\r\n\t\t\thandlePageChange(null, 1)\r\n\t}\r\n\r\n\t// SortBy\r\n\tconst handleSortChange = (e) => {\r\n\t\tlet sortBy = e.target.value;\r\n\t\tsortPokemon(sortBy)\r\n\t\tif (sortBy !== '') {\r\n\t\t\tsetIsSorted(true)\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n\tconst sortPokemon = (sortBy) => {\r\n\t\tlet sortCriteria;\r\n\t\tif (sortBy === 'ID') {\r\n\t\t\tsortCriteria = (a, b) => a.id > b.id ? 1 : -1;\r\n\t\t\t}\r\n\t\telse if (sortBy === 'Name') {\r\n\t\t\tsortCriteria = (a, b) => a.name > b.name ? 1 : -1;\r\n\t\t}\r\n\t\telse if (sortBy === 'Type') {\r\n\t\t\tsortCriteria = (a, b) => a.types[0].type.name > b.types[0].type.name ? 1 : -1;\r\n\t\t}\r\n\t\telse if (sortBy === 'HP') {\r\n\t\t\tsortCriteria = (a, b) => a.stats[0].base_stat < b.stats[0].base_stat ? 1 : -1;\r\n\t\t}\r\n\t\telse if (sortBy === 'Attack') {\r\n\t\t\tsortCriteria = (a, b) => a.stats[1].base_stat < b.stats[1].base_stat ? 1 : -1;\r\n\t\t}\r\n\t\telse if (sortBy === 'Defense') {\r\n\t\t\tsortCriteria = (a, b) => a.stats[2].base_stat < b.stats[2].base_stat ? 1 : -1;\r\n\t\t}\r\n\t\telse if (sortBy === 'Special Attack') {\r\n\t\t\tsortCriteria = (a, b) => a.stats[3].base_stat < b.stats[3].base_stat ? 1 : -1;\r\n\t\t}\r\n\t\telse if (sortBy === 'Special Defense') {\r\n\t\t\tsortCriteria = (a, b) => a.stats[4].base_stat < b.stats[4].base_stat ? 1 : -1;\r\n\t\t}\r\n\t\telse if (sortBy === 'Speed') {\r\n\t\t\tsortCriteria = (a, b) => a.stats[5].base_stat < b.stats[5].base_stat ? 1 : -1;\r\n\t\t}\r\n\t\tsetFilteredPokemon((poke)=>[...poke.sort(sortCriteria)])\r\n\t\thandlePageChange(null, 1)\r\n\t}\r\n\r\n\t// PAGINATION\r\n\tconst [page, setpage] = useState(1);\r\n  \tconst [pokemonPerPage] = useState(12);\r\n\tconst indexOfLastPokemon = page * pokemonPerPage;\r\n  \tconst indexOfFirstPokemon = indexOfLastPokemon - pokemonPerPage;\r\n  \tconst currentPokemon = filteredPokemon.slice(indexOfFirstPokemon, indexOfLastPokemon);\r\n\t\r\n\tconst handlePageChange = (event, value) => {\r\n\t\tsetpage(value);\r\n\t};\r\n\r\n\t// RENDER\r\n\treturn (\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<NavBar \r\n\t\t\t\tnameFilter={nameFilter} \r\n\t\t\t\tsetNameFilter={setNameFilter} \r\n\t\t\t\thandleNameChange={handleNameChange} \r\n\t\t\t\ttypeFilter ={typeFilter} setTypeFilter={setTypeFilter} \r\n\t\t\t\thandleTypeChange={handleTypeChange}\r\n\t\t\t\thandleSortChange={handleSortChange}/>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loading/>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<BasicPagination\r\n\t\t\t\t\t\tpokemonPerPage={pokemonPerPage}\r\n\t\t\t\t\t\ttotalPokemon={filteredPokemon.length}\r\n\t\t\t\t\t\thandlePageChange={handlePageChange}\r\n\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Pokemon pokemon={currentPokemon} loading={loading} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\services\\pokemon.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\Card\\Card.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\helpers\\pokemonTypes.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\GrowMenu\\GrowMenu.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\StatChart\\StatChart.js",[],["68","69"],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\DetailsDialog\\DetailsDialog.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\TypeSelect\\TypeSelect.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\Loading\\Loading.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\Pokemon\\Pokemon.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\BasicPagination\\BasicPagination.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\AboutDialog\\AboutDialog.js",[],"C:\\Users\\rache\\Documents\\CodeLearning\\JavaScript\\pokedex-react-app\\src\\components\\SortBy\\SortBy.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":46,"column":10,"nodeType":"76","messageId":"77","endLine":46,"endColumn":18},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'isSorted' is assigned a value but never used.","Identifier","unusedVar",["80"],["81"],"no-global-assign","no-unsafe-negation"]